#summary Something about implimentation.

= Introduction =

Add your content here.


= 对创建模式的支持 =
发现还是象Spring那样，分为静态工厂方法和实例工厂比较合理一些，而不是按抽象工厂和工厂方法来区分。
已经支持，但静态工厂方法只支持一个，不能同时使用多个。以后想办法支持。

= 对注入类型的支持 =
  * *map*
由于将map<string, void`*`>强制转换成map<string, classA`*`>应用，可能会出错（http://sharplogautumn.spaces.live.com/blog/cns!13AC373D7F3EAA87!126.entry ），所以应在应用中生成和释放map。可以采用某种方式（比如模板或宏），让应用很容易的自定义一个map基本类型。
  * *对象的引用*
  * *远程引用，WebService？*

= 自身实现框架 =
  * *微内核？*

= 其它事情 =
  * *Bean的别名*
象Spring中那样可以定义别名，便于使用。
  * *属性注入方法重载*
把属性注入方法中的属性判断移到Framework中，这样，可以通过配置来实现是否允许重载。如果不允许重载的话，就不需要在bean的属性注入配置中说明注入类型了。
  * *属性注入*
修改Wrapper，让它既可以设置属性，又可以取得属性的类型。这样，在配置文件中就可以不用设置属性的类型了。对于bean类型的注入，也采用<ref bean="xxx"/>的形式。如此，就不允许属性注入方法重载了。

= 未处理好的问题 =
  * *bean由应用销毁的问题*
